const v="modulepreload",E=function(i){return"/"+i},u={},y=function(d,l,p){let c=Promise.resolve();if(l&&l.length>0){let f=function(t){return Promise.all(t.map(o=>Promise.resolve(o).then(s=>({status:"fulfilled",value:s}),s=>({status:"rejected",reason:s}))))};document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),r=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));c=f(l.map(t=>{if(t=E(t),t in u)return;u[t]=!0;const o=t.endsWith(".css"),s=o?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${s}`))return;const n=document.createElement("link");if(n.rel=o?"stylesheet":v,o||(n.as="script"),n.crossOrigin="",n.href=t,r&&n.setAttribute("nonce",r),document.head.appendChild(n),o)return new Promise((m,h)=>{n.addEventListener("load",m),n.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${t}`)))})}))}function a(e){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=e,window.dispatchEvent(r),!r.defaultPrevented)throw e}return c.then(e=>{for(const r of e||[])r.status==="rejected"&&a(r.reason);return d().catch(a)})};export{y as _};
