services:
  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./cert.pem:/etc/ssl/certs/cert.pem
      - ./key.pem:/etc/ssl/certs/key.pem

  # celery-worker:
  #   build:
  #     context: .
  #     dockerfile: docker/python/Dockerfile.dev
  #     args:
  #       - SERVICE_NAME=celery
  #   command: >
  #     celery -A main worker -l info -Q q_default
  #   env_file:
  #     - .env.dev
  #   environment:
  #     - SERVICE_NAME=celery
  #     - SERVICE_ID=celery.service
  #   volumes:
  #     - ./src/service/celery:/app
  #     - ./src/common:/app/common
  template:
    build:
      context: .
      dockerfile: docker/python/Dockerfile.dev
      args:
        - SERVICE_DIR=template
    env_file:
      - .env.dev
    environment:
      - SERVICE_ID=template.service
      - SERVICE_NAME=template
      - SERVICE_API_VERSION=v1
      - SERVICE_DB_SCHEMA=template
    volumes:
      - ./src/service/template:/app
      - ./src/common:/app/common

  template-celery:
    build:
      context: .
      dockerfile: docker/python/Dockerfile.dev
      args:
        - SERVICE_DIR=template
    env_file:
      - .env.dev
    command: >
      celery -A common.celery.worker worker -Q template --loglevel=info
    environment:
      - SERVICE_ID=template.service
      - SERVICE_NAME=template
      - SERVICE_API_VERSION=v1
      - SERVICE_DB_SCHEMA=template
    volumes:
      - ./src/service/template:/app
      - ./src/common:/app/common

  mcp:
    build:
      context: .
      dockerfile: docker/python/Dockerfile.dev
      args:
        - SERVICE_DIR=mcp
    env_file:
      - .env.dev
    command: ['python', 'main.py']
    environment:
      - SERVICE_ID=mcp.service
      - SERVICE_NAME=mcp
      - SERVICE_API_VERSION=v1
      - SERVICE_DB_SCHEMA=mcp
    volumes:
      - ./src/service/mcp:/app
      - ./src/common:/app/common

networks:
  shared-net:
    name: net
