services:
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - /var/lib/postgresql/data
    ports:
      - 5432:5432

  mongo:
    # image: mongo
    image: mongo:4.4.29 # for ktcloud
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - /data/db
    healthcheck:
      test: >
        mongosh --username ${MONGO_USER} --password ${MONGO_PASSWORD} --authenticationDatabase admin --eval "db.adminCommand({ping:1})" || exit 1
      interval: 5s
      timeout: 3s
      retries: 30

  redis:
    image: redis
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - 6379:6379
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']
      interval: 5s
      timeout: 3s
      retries: 30

  s3:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 5s
      timeout: 3s
      retries: 30

  neo4j:
    image: neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_PLUGINS: '["apoc","genai"]'
      NEO4J_dbms_security_procedures_allowlist: 'apoc.*,gds.*,genai.*'
      NEO4J_dbms_security_procedures_unrestricted: 'jwt.security.*,apoc.*,genai.*'
      NEO4J_apoc_export_file_enabled: 'true'
      NEO4J_apoc_import_file_enabled: 'true'
      NEO4J_server_directories_import: '/var/lib/neo4j/import'
      NEO4J_initial_dbms_default__database: ${NEO4J_DB}
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - /data
      - /logs
      - /var/lib/neo4j/import
    healthcheck:
      test: ['CMD', 'wget', 'http://localhost:7474']
      interval: 5s
      timeout: 3s
      retries: 30

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    ports:
      - 5672:5672
      - 15672:15672

networks:
  shared-net:
    name: net
