# server {
#   listen 80;
#   server_name _;

#   root /usr/share/nginx/html;
#   index index.html;

#   # location /ui/v1/auth/assets {
#   #   default_type application/javascript;

#   #   add_header Access-Control-Allow-Origin * always;
#   #   add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
#   #   add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept';
    
#   #   alias /usr/share/nginx/html/ui/v1/auth/assets/;
#   #   access_log off;
#   #   expires 1y;
#   #   add_header Cache-Control "public";
#   # }
#   location ~* ^.*\remoteEntry.js$ {
#     alias /usr/share/nginx/html/;
#     default_type application/javascript;
#     add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
#     add_header Pragma "no-cache";
#     add_header Expires 0;

#     add_header Access-Control-Allow-Origin * always;
#     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
#     add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept';
#   }

#   location ~* ^/ui/v1/auth/assets/.*\.js$ {
#     alias /usr/share/nginx/html/ui/v1/auth/assets/;
#     default_type application/javascript;
#     add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
#     add_header Pragma "no-cache";
#     add_header Expires 0;
    
#     add_header Access-Control-Allow-Origin * always;
#     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
#     add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept';

#     add_header CF-Cache-Status "BYPASS";
#   }

#   location ~* ^/ui/v1/auth/assets/.*\.css$ {
#     alias /usr/share/nginx/html/ui/v1/auth/assets/;
#     default_type text/css;
#     add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
#     add_header Pragma "no-cache";
#     add_header Expires 0;
    
#     add_header Access-Control-Allow-Origin * always;
#     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
#     add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept';

#     add_header CF-Cache-Status "BYPASS";
#   }

#   location / {
#     add_header Access-Control-Allow-Origin * always;
#     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
#     add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept';
    
#     try_files $uri /index.html;
#   }

# #   location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|webp)$ {
# #     expires 6M;
# #     access_log off;
# #     add_header Cache-Control "public";
# #   }
# }

server {
  listen 2000;
  server_name _;

  # 실제 디스크 기준 루트
  root /usr/share/nginx/html;
  index index.html;

  location ^~ /ui/v1/[^/]+/assets/ {
    types {
      application/javascript js mjs;
      text/css css;
      application/json map;
      image/svg+xml svg;
      font/ttf ttf;
      font/woff woff;
      font/woff2 woff2;
      image/png png;
      image/jpeg jpg jpeg;
      image/webp webp;
    }

    try_files $uri =404;

    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;

    # 필요 시 캐시 조정
    add_header Cache-Control "public, max-age=31536000, immutable";
    access_log off;
  }

  # --- SPA fallback + 공통 CORS ---
  location / {
    # 프리플라이트
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin "*" always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 204;
    }

    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;

    # dist/index.html 로 폴백 (JS/CSS는 위 location들이 처리)
    try_files $uri /index.html;
  }
}